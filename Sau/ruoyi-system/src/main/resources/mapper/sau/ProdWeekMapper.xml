<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.sau.mapper.ProdWeekMapper">
    <insert id="addWorkly" >
        insert into sau_production_weekly_msg
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="stuProdId != null and stuProdId != 0">
                stu_prod_id,
            </if>
            <if test="worklyCategory != null and worklyCategory != ''">
                workly_category,
            </if>
            <if test="worklyOver != null and worklyOver != ''">
                workly_over,
            </if>
            <if test="worklyMain != null and worklyMain != ''">
                workly_main,
            </if>
            <if test="worklyScore != null and worklyScore != ''">
                workly_score,
            </if>
            <if test="worklyRemark != null and worklyRemark != ''">
                workly_remark,
            </if>
            state
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="stuProdId != null and stuProdId != 0">
                #{stuProdId},
            </if>
            <if test="worklyCategory != null and worklyCategory != ''">
                #{worklyCategory},
            </if>
            <if test="worklyOver != null and worklyOver != ''">
                #{worklyOver},
            </if>
            <if test="worklyMain != null and worklyMain != ''">
                #{worklyMain},
            </if>
            <if test="worklyScore != null and worklyScore != ''">
                #{worklyScore},
            </if>
            <if test="worklyRemark != null and worklyRemark != ''">
                #{worklyRemark},
            </if>
            1
        </trim>
    </insert>

    <select id="selectWeekBystuId" parameterType="long" resultType="java.util.Map">
        select
        a.production_id as "productionId",
        c.workly_id as "worklyId",
        b.production_weekly as "productionWeekly",
        c.workly_category as "worklyCategory",
        c.workly_over as "worklyOver",
        c.workly_main as "worklyMain",
        c.workly_score as "worklyScore",
        c.workly_act_score as "worklyActScore",
        c.workly_remark as "worklyRemark"
        from sau_student_production_msg a
        left join sau_production_info_msg b on a.production_id = b.production_id
        left join sau_production_weekly_msg c on a.stu_prod_id = c.stu_prod_id
        <where>
            a.student_id = #{stuId} and a.state = 1 and b.state = 1 and c.state = 1
            <if test="productionId != null and productionId != 0">
                and a.production_id = #{productionId}
            </if>
            <if test="worklyId != null and worklyId != 0">
                and c.workly_id = #{worklyId}
            </if>
            <if test="worklyCategory != null and worklyCategory != ''">
                and c.workly_category like concat ('%',#{worklyCategory},'%')
            </if>
        </where>
    </select>

    <select id="selectWeeks" resultType="map">
        select
        a.workly_id as "worklyId",
        a.workly_category as "worklyCategory",
        a.workly_over as "worklyOver",
        a.workly_main as "worklyMain",
        a.workly_score as "worklyScore",
        a.workly_act_score as "worklyActScore",
        a.workly_remark as "worklyRemark",
        b.production_id as "productionId",
        c.student_id as "studentId",
        c.student_name as "studentName"
        from sau_production_weekly_msg a
        left join sau_student_production_msg b on a.stu_prod_id = b.stu_prod_id
        left join sau_student_info_msg c on b.student_id = c.student_id
        <where>
            a.state = 1 and b.state = 1 and c.state = 1
            <if test="productionId != null and productionId != 0">
                and b.production_id = #{productionId}
            </if>
            <if test="studentId != null and studentId != 0">
                and c.student_id = #{studentId}
            </if>
            <if test="worklyCategory != null and worklyCategory != ''">
                and a.workly_category  like concat('%',#{worklyCategory},'%')
            </if>
        </where>
    </select>

    <select id="selectWeekById" parameterType="long" resultType="com.ruoyi.sau.domain.ProdWeek">
        select
        workly_id as "worklyId",
        stu_prod_id as "stuProdId",
        workly_category as "worklyCategory",
        workly_over as "worklyOver",
        workly_main as "worklyMain",
        workly_score as "worklyScore",
        workly_act_score as "worklyActScore",
        workly_remark as "worklyRemark"
        from sau_production_weekly_msg
        where state = 1 and workly_id = #{worklyId}
    </select>

    <update id="updateWeeklyByTea" parameterType="map">
        update sau_production_weekly_msg
        <set>
            <if test="worklyActScore != null and worklyActScore != ''">
                workly_act_score = #{worklyActScore},
            </if>
            <if test="worklyRemark != null and worklyRemark != ''">
                workly_remark = #{worklyRemark},
            </if>
        </set>
        where workly_id = #{worklyId}
    </update>

    <update id="updateWeekly" parameterType="map">
        update sau_production_weekly_msg
        set workly_main = #{worklyMain}
        where workly_id = #{worklyId}
    </update>

    <update id="deleteWeekByStuProdId" >
        update sau_production_weekly_msg
        set state = 2
        where stu_prod_id = #{stuProdId}
    </update>
</mapper>